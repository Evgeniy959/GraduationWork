// <auto-generated />
using System;
using HotelAdmin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HotelAdmin.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelAdmin.Models.Entity.Admin", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Email = "admin@mail.ru",
                            Password = "$2a$11$wfuAgwaW4YqoJTb9pivFI.xgNIKSf8r5EX6se5CdnYXGWbowo.ksy"
                        });
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Number");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonsCount")
                        .HasColumnType("integer")
                        .HasColumnName("Persons_count");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Square")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Сategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "204",
                            PersonsCount = 2,
                            Photo = "img/room/room-s.jpeg",
                            Square = "20кв.м",
                            Сategory = "Стандарт"
                        },
                        new
                        {
                            Id = 2,
                            Number = "307СБ",
                            PersonsCount = 2,
                            Photo = "img/room/room-sb.jpg",
                            Square = "20кв.м",
                            Сategory = "Стандарт с большой кроватью"
                        },
                        new
                        {
                            Id = 3,
                            Number = "405СУ",
                            PersonsCount = 2,
                            Photo = "img/room/room-sbi.jpeg",
                            Square = "25кв.м",
                            Сategory = "Стандарт Улучшенный с большой кроватью"
                        },
                        new
                        {
                            Id = 4,
                            Number = "514ПЛ",
                            PersonsCount = 4,
                            Photo = "img/room/room-pl.jpg",
                            Square = "32кв.м",
                            Сategory = "Полулюкс"
                        },
                        new
                        {
                            Id = 5,
                            Number = "618Л",
                            PersonsCount = 4,
                            Photo = "img/room/room-l.jpg",
                            Square = "46кв.м",
                            Сategory = "Люкс"
                        },
                        new
                        {
                            Id = 6,
                            Number = "725ДЛ",
                            PersonsCount = 4,
                            Photo = "img/room/room-dl.jpeg",
                            Square = "58кв.м",
                            Сategory = "Делюкс"
                        });
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.RoomDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("RoomId");

                    b.ToTable("Dates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 3,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 4,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 5,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 6,
                            RoomId = 6
                        });
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.RoomTariff", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId1")
                        .HasColumnType("integer");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomId1");

                    b.ToTable("Tariffs");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Subscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Client", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Room", "Room")
                        .WithMany("Client")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Order", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.RoomDate", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("HotelAdmin.Models.Entity.Room", "Room")
                        .WithMany("RoomDate")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.RoomTariff", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Room", "Room")
                        .WithMany("Tariff")
                        .HasForeignKey("RoomId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Room", b =>
                {
                    b.Navigation("Client");

                    b.Navigation("RoomDate");

                    b.Navigation("Tariff");
                });
#pragma warning restore 612, 618
        }
    }
}
